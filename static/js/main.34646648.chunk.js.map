{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","robot","imgUrl","id","className","alt","src","name","email","CardList","robots","map","user","i","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","errorInfo","this","setState","Component","App","event","searchField","target","value","fetch","response","json","filteredList","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCQCQ,EAbF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACLC,EAAM,+BAA2BD,EAAME,GAAjC,YACZ,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAKJ,IACvB,gCACI,6BAAKD,EAAMM,OACX,4BAAIN,EAAMO,eCQXC,EAdE,SAAC,GACjB,IADkBC,EACnB,EADmBA,OAEf,OACI,mCAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAO,cAAC,EAAD,CAAoBZ,MAAOW,GAAhBA,EAAKT,UCM5BW,EAbG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAChB,OACI,qBAAKX,UAAU,MAAf,SACI,uBACAA,UAAU,oCACVY,KAAO,SACPC,YAAY,kBACZC,SAAUH,OCKPI,G,YAZA,SAACC,GACZ,OACI,qBAAKC,MAAO,CACJC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAHhB,SAKKJ,EAAMK,aCgBJC,E,kDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAEDO,MAAQ,CACTC,UAAU,GAJC,E,qDAQnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAGJG,KAAKX,MAAMK,a,GAnBEQ,aCuDbC,E,kDA/CX,aAAe,IAAD,8BACV,gBAaJnB,eAAiB,SAACoB,GACd,EAAKH,SAAS,CAACI,YAAaD,EAAME,OAAOC,SAbzC,EAAKX,MAAQ,CACTjB,OAAQ,GACR0B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACL7C,MAAK,SAAC8C,GAAD,OAAcA,EAASC,UAC5B/C,MAAK,SAAC+C,GAAD,OAAU,EAAKT,SAAS,CAACtB,OAAQ+B,S,oBAO3C,WAAU,IAAD,OAECC,EAAeX,KAAKJ,MAAMjB,OAAOiC,QACnC,SAAA1C,GACI,OAAOA,EAAMM,KAAKqC,cAAcC,SAAS,EAAKlB,MAAMS,YAAYQ,kBAIxE,OAAiC,IAA7Bb,KAAKJ,MAAMjB,OAAOoC,OAEX,oBAAI1C,UAAU,KAAd,wBAKH,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,eAAgBgB,KAAKhB,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUL,OAAQgC,e,GAxC5BT,aCFlBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.34646648.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({robot}) => {\r\n    const imgUrl = `https://robohash.org/${robot.id}?200x200`;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={imgUrl} />\r\n            <div>\r\n                <h2>{robot.name}</h2>\r\n                <p>{robot.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\nimport React from 'react';\r\n\r\nconst CardList = ({robots}) => \r\n{\r\n    return (\r\n        <>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return <Card key={user.id} robot={user}/>\r\n                })\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({onSearchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n            className='pa3 ba b--ggreen bg-lightest-blue'\r\n            type = 'search'\r\n            placeholder='Search robots..'                \r\n            onChange={onSearchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ \r\n                overflowY: 'scroll', \r\n                border: '1px solid black', \r\n                height: '800px' \r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasError: false\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render () {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops. That is not good.</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from 'components/CardList';\r\nimport SearchBox from 'components/SearchBox';\r\nimport 'tachyons';\r\nimport './App.css';\r\nimport Scroll from 'components/Scroll';\r\nimport ErrorBoundary from 'components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n        \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then((response) => response.json())\r\n        .then((json) => this.setState({robots: json}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchField: event.target.value});        \r\n    }\r\n\r\n    render() {\r\n\r\n        const filteredList = this.state.robots.filter(\r\n            robot => {\r\n                return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n            }\r\n        );\r\n\r\n        if (this.state.robots.length === 0)\r\n        {\r\n            return <h1 className='tc'>Loading...</h1>\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox onSearchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredList}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}